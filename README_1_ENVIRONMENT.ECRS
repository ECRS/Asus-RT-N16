/**
 * Copyright 2015 ECR Software Corporation. All rights reserved.
 *
 * README.ECRS:
 * 		With this documentation the building of the ASUS RT-N16 firmware should
 *   	be reproducible from a state of a blank Virtual Machine, to a state of
 *   	a fully built USB/VPN supported .trx firmware file.
 *
 * SUGGESTED ENVIRONMENT:
 * 		Distributor ID: Ubuntu
 *   	Description:    Ubuntu 14.04.3 LTS
 *    	Release:        14.04
 *   	Codename:       trusty
 */

/**
 * ==== Building A Fresh Staging Environment ====
 * (Only needed in the event that something goes horribly wrong with the
 * dependencies and packages on the AsusBuilder VM.)
 */
1. Download Ubuntu 14.04.3 LTS Server from: http://www.ubuntu.com/download/server

2. Create VM with this ISO. When prompted at the end of the installation, the
    only package that should be installed is VirtualBox Additions.

3. Login as 'root' and perform the following apt-get commands:
    root@asusrtn16:~# apt-get update
    root@asusrtn16:~# apt-get install gcc g++ binutils patch bzip2 flex bison make gettext unzip zlib1g-dev libc6 libncurses5-dev automake git subversion build-essential libtool java-default
    root@asusrtn16:~# apt-get upgrade

4. That's it! Your environment should now have all packages necessary to successfully
    build the Asus RT-N16 firmware.




/**
 * ==== Create a new stock image from the GIT repository ====
 * (Only needed in the event that a new TAG has been published in the GIT repo.
 * A new TAG would correspond to a fairly decent number of changes and enhancements
 * added to the Tomato firmware. A new clone of the repository will require
 * recreating the customizations added to the firmware.)
 */
1. Login as a local user account.

2. Perform the following commands:
    astclair@asusrtn16:~# cd ~
    astclair@asusrtn16:~# git clone https://github.com/tomatofirmware/tomato.git tomato
    astclair@asusrtn16:~# cd tomato
    astclair@asusrtn16:~# git tag | grep v1
    astclair@asusrtn16:~# git checkout v132    (Or the most current version that is returned from the previous grep)

3. Link the tools acquired from the clone to the appropriate location:
    astclair@asusrtn16:~# vim ~/.profile
    * Add the following:
	# set PATH so it includes the ASUS's tools/brcm links
	if [ -d "$HOME/AsusRT-N16/trunk/tomato/tools/brcm" ] ; then
	    PATH="$PATH:/opt/brcm/hndtools-mipsel-linux/bin:/opt/brcm/hndtools-mipsel-linux/uclibc"
	fi
    * Save the .profile file

    astclair@asusrtn16:~# sudo ln -ls ~/tomato/tools/brcm /opt/brcm
    Logout and then login again so the PATH gets set.

4. Verify that the v132 (or whichever you checked out) has the most up-to-date
    version of code from the repository. Do this by browsing to the tag's page
    in the repository: https://github.com/tomatofirmware/tomato/releases/tag/v132

    * Look for a line similar to:
        tagged 13 days ago Â· 1 commit to tomato-shibby since this tag
    * If there are commits since the tag, you will need to pull them:
        astclair@asusrtn16:~# cd tomato
        astclair@asusrtn16:~/tomato# git checkout 93dbaee    (Where 93dbaee corresponds to the commit number found on the GIT page)




/**
 * ==== Build & Re-Build Stock Firmware ====
 * (This will be the most common procedure performed. If changes are made to the
 * source packages or the linux settings, simply run these two commands to regenerate
 * a new, updated and ECRS customized *.trx file)
 *
 * The last make command below feeds specific parameters into the compiler so that
 * different builds can be performed. The r2e corresponds to VPN and USB support.
 * To see a list of all available build options, type:
 *	cd ~/tomato/release/src-rt
 *   	make help
 */
astclair@asusrtn16:~/tomato# cd release/src-rt
astclair@asusrtn16:~/tomato/release/src-rt# make clean
astclair@asusrtn16:~/tomato/release/src-rt# make V1=RT-N16- V2=-132.1000 r2e




=========== APPENDIX ===========
/*
    Refer to the below table to understand how the final file name corresponds to
    the parameters input.

    NOTE: USB Support in the file name is optional. It will only appear if USB is supported.
 */
 +---------------------------------------------------+---------+--------+---------------+---------------+---------------+--------------+--------------+----------------------+--------------+-------------------+----------+
 |                       File                        | Project | Kernel | ?USB Support? | Major Version | Minor Version | Router Model | Architecture | Architecture Release | Base Git Tag | ECRS Build Number | Edition  |
 +---------------------------------------------------+---------+--------+---------------+---------------+---------------+--------------+--------------+----------------------+--------------+-------------------+----------+
 | tomato-K26USB-1.28.RT-N16-MIPSR2-132.1000-VPN.trx | tomato  | K26    | USB           |             1 |            28 | RT-N16       | MIPS         | R2                   |          132 |              1000 | VPN      |
 +---------------------------------------------------+---------+--------+---------------+---------------+---------------+--------------+--------------+----------------------+--------------+-------------------+----------+



 /*
     Refer to the below text to understand what the make command parameters accomplish
  */
 astclair@asusrtn16:~/tomato/release/src-rt$ make help
 n            Mini-USB - for oruter with 4MB flash and USB port - K24 only
 e            VPN - (standard plus VPN, extra utilities and NTFS support)
 c            BTgui-VPN - (Ext plus BT gui)
 d            Nocat-VPN - (BTgui plus VPN plus Nocat)
 g            Tor-VPN - (BTgui plus VPN plus TOR Project)
 t            BT-VPN - (BT plus VPN)
 b            Big-VPN - (Big plus VPN)
 o            Mega-VPN - (Mega plus VPN plus NOCAT minus NFS)
 z            MIPS Release 15F AIO (for routers +8MB flash)
 i            MiniIPv6 - (IPv6 with no USB support minus CIFS and RIPv1/2)
 j            MiniVPN - (VPN with no USB support minus CIFS and RIPv1/2)
 f            Mini - (no USB support minus CIFS and RIPv1/2)
 v            VPN (no usb) - (VPN with no USB support) / in K26 + IPv6 support
 m            Max (no usb) - (Max with no USB support) / in K26 + IPv6 support
 w            SD-VPN (no usb) - (VPN with SD-MOD and no USB support)
 r2e          MIPS Release 2 VPN
 r2c          MIPS Release 2 BTgui-VPN
 r2d          MIPS Release 2 Nocat-VPN
 r2g          MIPS Release 2 Tor-VPN
 r2t          MIPS Release 2 BT-VPN
 r2b          MIPS Release 2 Big-VPN
 r2o          MIPS Release 2 Mega-VPN (for routers +8MB flash)
 r2z          MIPS Release 2 AIO (for routers +8MB flash)
 r2v          MIPS Release 2 VPN (no usb)
 r2m          MIPS Release 2 Max (no usb)
 r2i          MIPS Release 2 MiniIPv6 (for 4MB flash)
 r2j          MIPS Release 2 MiniVPN (for 4MB flash)
 r2f          MIPS Release 2 Mini (for netgear)
 n60e         Linksys E-series build VPN
 n60c         Linksys E-series build BTGui-VPN
 n60d         Linksys E-series build BTGui-VPN plus Nocat
 n60g         Linksys E-series build BTGui-VPN plus TOR Project
 n60t         Linksys E-series build BT-VPN
 n60b         Linksys E-series build Big-VPN
 n60o         Linksys E-series build Mega-VPN
 n60z         Linksys E-series build AIO
 n60v         Linksys E-series build IPv6-VPN for E2000
 n60m         Linksys E-series build Max for E2000
 ..etc..      other build configs
 clean        -C router clean
 cleanimage   rm -rf image
 cleantools   clean btools, mksquashfs
 cleankernel  -C Linux distclean (but preserves .config)
 distclean    distclean of Linux & busybox (but preserve .configs)
 prepk        -C Linux oldconfig dep
